{"version":3,"sources":["components/Feedback/RenderButtons/RenderButtons.js","components/Feedback/RenderStatistic/RenderStatistic.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["RenderButtons","clickHandler","type","onClick","e","target","textContent","toLowerCase","Statistic","value","countTotalFeedback","countPositiveFeedbackPercentage","good","neutral","bad","Feedback","state","setState","Math","ceil","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuCeA,EArCO,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACvB,OACE,+BACE,6BACE,wBACEC,KAAK,SACLC,QAAS,SAACC,GACRH,EAAaG,EAAEC,OAAOC,YAAYC,gBAHtC,oBASF,6BACE,wBACEL,KAAK,SACLC,QAAS,SAACC,GACRH,EAAaG,EAAEC,OAAOC,YAAYC,gBAHtC,uBASF,6BACE,wBACEL,KAAK,SACLC,QAAS,SAACC,GACRH,EAAaG,EAAEC,OAAOC,YAAYC,gBAHtC,uBCLOC,EAnBG,SAAC,GAIZ,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,+BACE,wCAAWF,EAAMG,QACjB,2CAAcH,EAAMI,WACpB,uCAAUJ,EAAMK,OAChB,yCAAYJ,KACZ,oDAEGC,GAAmC,EAFtC,YCPeI,E,4MACnBC,MAAQ,CACNJ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPX,QAAU,SAACM,GACT,EAAKQ,SAAL,eACGR,EAAQ,EAAKO,MAAMP,GAAS,K,EAIjCC,mBAAqB,WACnB,MAA+B,EAAKM,MACpC,OADA,EAAQJ,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBH,gCAAkC,WAChC,IAAQC,EAAS,EAAKI,MAAdJ,KACR,OAAOM,KAAKC,KAAMP,EAAO,EAAKF,qBAAwB,M,4CAGxD,WACE,OACE,gCACE,uDACA,cAAC,EAAD,CAAeT,aAAcmB,KAAKjB,UAClC,4CAECiB,KAAKT,kCACJ,cAAC,EAAD,CACEF,MAAOW,KAAKJ,MACZN,mBAAoBU,KAAKV,qBACzBC,gCAAiCS,KAAKT,oCAGxC,yD,GArC4BU,aCCvBC,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c9c91891.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst RenderButtons = ({ clickHandler }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            clickHandler(e.target.textContent.toLowerCase());\r\n          }}\r\n        >\r\n          Good\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            clickHandler(e.target.textContent.toLowerCase());\r\n          }}\r\n        >\r\n          Neutral\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            clickHandler(e.target.textContent.toLowerCase());\r\n          }}\r\n        >\r\n          Bad\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RenderButtons;\r\n","import React from \"react\";\r\n\r\nconst Statistic = ({\r\n  value,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      <li>Good: {value.good}</li>\r\n      <li>Neutral: {value.neutral}</li>\r\n      <li>Bad: {value.bad}</li>\r\n      <li>Total: {countTotalFeedback}</li>\r\n      <li>\r\n        Positive feedback:\r\n        {countPositiveFeedbackPercentage || 0} %\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nimport RenderButtons from \"./RenderButtons/RenderButtons\";\r\nimport Statistic from \"./RenderStatistic/RenderStatistic\";\r\n\r\nexport default class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onClick = (value) => {\r\n    this.setState({\r\n      [value]: this.state[value] + 1,\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    return Math.ceil((good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Please Leave feedback</h1>\r\n        <RenderButtons clickHandler={this.onClick} />\r\n        <h2>Statistics</h2>\r\n\r\n        {this.countPositiveFeedbackPercentage() ? (\r\n          <Statistic\r\n            value={this.state}\r\n            countTotalFeedback={this.countTotalFeedback()}\r\n            countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <p>No feedback given</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Feedback from \"./components/Feedback/Feedback\";\r\n\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}